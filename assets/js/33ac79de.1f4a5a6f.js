"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[705],{89293:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>c,default:()=>f,frontMatter:()=>p,metadata:()=>h,toc:()=>g});var r=t(67294),a=t(3905),i=t(12401),o=t(86010);const s=({query:e,variables:n,response:t,viewOnly:a=!0})=>r.createElement("div",{className:`graphiql ${(0,o.Z)({"with-vars":!!n,"view-only":a})}`},r.createElement(i.ZP,{readOnly:!1,editorTheme:"dracula",schema:null,fetcher:async({query:e})=>({data:{easterEgg:"This query and response is for demo purposes only. Running it doesn't actually hit an API. Refresh the page to see the original response."}}),query:e,variables:n,response:t}));function u(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function d(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}const p={sidebar_position:8},c="GraphiQL IDE",h={unversionedId:"docusaurus-mdx-guide/graphiql-ide",id:"docusaurus-mdx-guide/graphiql-ide",title:"GraphiQL IDE",description:"We use graphiql editor wherever applicable for example showcase throughout docs.",source:"@site/wiki/docusaurus-mdx-guide/graphiql-ide.mdx",sourceDirName:"docusaurus-mdx-guide",slug:"/docusaurus-mdx-guide/graphiql-ide",permalink:"/dronahq-docs/wiki/docusaurus-mdx-guide/graphiql-ide",draft:!1,editUrl:"https://github.com/rahul-gharat/dronahq-docs/edit/main/docs/docusaurus-mdx-guide/graphiql-ide.mdx",tags:[],version:"current",lastUpdatedBy:"Rahul Gharat",lastUpdatedAt:1688552792,formattedLastUpdatedAt:"Jul 5, 2023",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"wiki",previous:{title:"Tabs",permalink:"/dronahq-docs/wiki/docusaurus-mdx-guide/tabs"},next:{title:"Thumbnail",permalink:"/dronahq-docs/wiki/docusaurus-mdx-guide/thumbnail"}},m={},g=[{value:"Result in UI",id:"result-in-ui",level:2}],y={toc:g},b="wrapper";function f(e){var{components:n}=e,t=d(e,["components"]);return(0,a.kt)(b,l(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){u(e,n,t[n])}))}return e}({},y,t),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"graphiql-ide"},"GraphiQL IDE"),(0,a.kt)("p",null,"We use graphiql editor wherever applicable for example showcase throughout docs."),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"GraphiQLIDE")," component is already created with the required custom logic. So, use ",(0,a.kt)("inlineCode",{parentName:"p"},"GraphiQLIDE")," just like any other\nReact component."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use a tab-width of 2 for nesting the requests and responses for optimal use of the space and maintaining consistency."),(0,a.kt)("li",{parentName:"ul"},"Nest query arguments for logical readability. Unfortunately, GraphiQL prettify does not do a good job of doing this by\ndefault."),(0,a.kt)("li",{parentName:"ul"},"Ensure that the order of fields in the responses is the same as in the requests for better readability.")),(0,a.kt)("p",null,"Use it as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import GraphiQLIDE from \'@site/src/components/GraphiQLIDE\';\n\n<GraphiQLIDE\n  query={`query {\n  author_by_pk(id: 1) {\n    id\n    name\n  }\n}`}\n  response={`{\n  "data": {\n    "author_by_pk": {\n      "id": 1,\n      "name": "Justin"\n    }\n  }\n}`}\n/>;\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'\n// highlight-start\nimport GraphiQLIDE from \'@site/src/components/GraphiQLIDE\';\n\n<GraphiQLIDE\n  query={`query get_authors_in_pincode ($jsonFilter: jsonb){\n// highlight-end\n    authors(\n      where: {\n        address: {_contains: $jsonFilter }\n      }\n    ) {\n      id\n      name\n      address\n    }\n  }`}\n  // highlight-next-line\n  variables={`{\n    "jsonFilter": {\n      "pincode": 560095\n    }\n  }`}\n  // highlight-next-line\n  response={`{\n    "data": {\n      "authors": [\n        {\n          "id": 1,\n          "name": "Ash",\n          "address": {\n            "street_address": "161, 19th Main Road, Koramangala 6th Block",\n            "city": "Bengaluru",\n            "state": "Karnataka",\n            "pincode": 560095,\n            "phone": "9090909090",\n          }\n        }\n      ]\n    }\n  }`}\n/>\n')),(0,a.kt)("h2",{id:"result-in-ui"},"Result in UI"),(0,a.kt)("p",null,"Below is how it should look in UI."),(0,a.kt)(s,{query:"query get_authors_in_pincode ($jsonFilter: jsonb){\n    authors(\n      where: {\n        address: {_contains: $jsonFilter }\n      }\n    ) {\n      id\n      name\n      address\n    }\n  }",variables:'{\n    "jsonFilter": {\n      "pincode": 560095\n    }\n  }',response:'{\n    "data": {\n      "authors": [\n        {\n          "id": 1,\n          "name": "Ash",\n          "address": {\n            "street_address": "161, 19th Main Road, Koramangala 6th Block",\n            "city": "Bengaluru",\n            "state": "Karnataka",\n            "pincode": 560095,\n            "phone": "9090909090",\n          }\n        }\n      ]\n    }\n  }',mdxType:"GraphiQLIDE"}))}f.isMDXComponent=!0}}]);