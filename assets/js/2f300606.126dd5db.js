"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[2112],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},81660:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>c,toc:()=>d});n(67294);var r=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const l={sidebar_label:"Page Structure",sidebar_position:0},s="Docs Page Structure",c={unversionedId:"docusaurus-mdx-guide/page-structure",id:"docusaurus-mdx-guide/page-structure",title:"Docs Page Structure",description:"Meta information",source:"@site/wiki/docusaurus-mdx-guide/page-structure.mdx",sourceDirName:"docusaurus-mdx-guide",slug:"/docusaurus-mdx-guide/page-structure",permalink:"/dronahq-docs/wiki/docusaurus-mdx-guide/page-structure",draft:!1,editUrl:"https://github.com/rahul-gharat/dronahq-docs/edit/main/docs/docusaurus-mdx-guide/page-structure.mdx",tags:[],version:"current",lastUpdatedBy:"Rahul Gharat",lastUpdatedAt:1688552792,formattedLastUpdatedAt:"Jul 5, 2023",sidebarPosition:0,frontMatter:{sidebar_label:"Page Structure",sidebar_position:0},sidebar:"wiki",previous:{title:"Docusaurus MDX Guide",permalink:"/dronahq-docs/wiki/category/docusaurus-mdx-guide"},next:{title:"Headings & Ids",permalink:"/dronahq-docs/wiki/docusaurus-mdx-guide/headings"}},u={},d=[{value:"Meta information",id:"meta-information",level:2},{value:"React component imports",id:"react-component-imports",level:2},{value:"Page title",id:"page-title",level:2},{value:"Table of contents",id:"table-of-contents",level:2},{value:"Markdown Variables",id:"markdown-variables",level:2},{value:"Run docs build",id:"run-docs-build",level:2}],p={toc:d},m="wrapper";function f(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)(m,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},p,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"docs-page-structure"},"Docs Page Structure"),(0,r.kt)("h2",{id:"meta-information"},"Meta information"),(0,r.kt)("p",null,"The following meta information should be added at the beginning of each docs page: ",(0,r.kt)("inlineCode",{parentName:"p"},"description")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"keywords"),"."),(0,r.kt)("p",null,"An example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markdown"},"---\ndescription: Data validations in Hasura\nkeywords:\n  - hasura\n  - docs\n  - schema\n  - data validation\n---\n")),(0,r.kt)("h2",{id:"react-component-imports"},"React component imports"),(0,r.kt)("p",null,"Please add any React component imports right below the frontmatter and before starting the main doc content."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import Thumbnail from '@site/src/components/Thumbnail';\n")),(0,r.kt)("p",null,"Note: When importing components from ",(0,r.kt)("inlineCode",{parentName:"p"},"src/")," directory, please do not use relative paths. Docusaurus provides a global\nvariable ",(0,r.kt)("inlineCode",{parentName:"p"},"@site")," which is resolved to the root of the app - absolute import. So, doing\n",(0,r.kt)("inlineCode",{parentName:"p"},"@site/src/components/Thumbnail")," is the same as ",(0,r.kt)("inlineCode",{parentName:"p"},"../../../src/components/Thumbnail"),"."),(0,r.kt)("h2",{id:"page-title"},"Page title"),(0,r.kt)("p",null,"Add the main title for each docs page."),(0,r.kt)("p",null,"An example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# Data validations\n")),(0,r.kt)("p",null,"You can also add ",(0,r.kt)("inlineCode",{parentName:"p"},"title")," frontmatter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markdown"},"---\ntitle: Data validations\n---\n")),(0,r.kt)("p",null,"By default the title will be the label for sidebar item. So, to use a shorten/different label for sidebar use the\n",(0,r.kt)("inlineCode",{parentName:"p"},"sidebar_label")," frontmatter to override."),(0,r.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,r.kt)("p",null,"This is auto generated on the right sidebar. And the depth can be controlled via ",(0,r.kt)("inlineCode",{parentName:"p"},"toc_max_heading_level"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"toc_min_heading_level")," frontmatter."),(0,r.kt)("p",null,"Please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/dronahq-docs/wiki/docusaurus-mdx-guide/table-of-contents"},"Table of Contents")," section to understand more about\nhwo to render this manually in between content and filtering items etc.,"),(0,r.kt)("h2",{id:"markdown-variables"},"Markdown Variables"),(0,r.kt)("p",null,"Add the markdown variables at very end of file for easier reference and maintainability. These variables are mostly for\nlinks. To avoid repetition of adding full path for each link, we could take advantage of\n",(0,r.kt)("a",{parentName:"p",href:"https://daringfireball.net/projects/markdown/syntax#link"},"reference-style-links")," syntax in markdown."),(0,r.kt)("p",null,"For Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markdown"},"## Section one\n\n.....\n\nREST ... [create_action][metadata-create-action] or [update_action][metadata-update-action] Metadata APIs ...\n[request_transform][requesttransformation] field ...:\n\n....\n\n## Section two\n\n.....\n\nREST ... [create_action][metadata-create-action] or [update_action][metadata-update-action] Metadata APIs ...\n[request_transform][requesttransformation] field ...:\n\n....\n\n\x3c!-- Shared Link Variables --\x3e\n\n[metadata-create-action]: /api-reference/metadata-api/actions.mdx#metadata-create-action\n[metadata-update-action]: /api-reference/metadata-api/actions.mdx#metadata-update-action\n[requesttransformation]: /api-reference/syntax-defs.mdx#requesttransformation\n")),(0,r.kt)("h2",{id:"run-docs-build"},"Run docs build"),(0,r.kt)("p",null,"Run the docs build in the end again with ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn build")," and make sure there are no errors/warnings because of any\ninconsistencies."))}f.isMDXComponent=!0}}]);